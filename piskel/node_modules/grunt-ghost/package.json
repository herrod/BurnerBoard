{
  "name": "grunt-ghost",
  "description": "Grunt task to run CasperJS tests",
  "version": "1.1.0",
  "homepage": "https://github.com/colinwren/grunt-ghost",
  "author": {
    "name": "Colin Wren",
    "email": "colin@cawren.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/colinwren/grunt-ghost.git"
  },
  "bugs": {
    "url": "https://github.com/colinwren/grunt-ghost/issues"
  },
  "scripts": {
    "test": "grunt"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/colinwren/grunt-ghost/blob/master/LICENSE-MIT"
    }
  ],
  "main": "tasks/ghost.js",
  "bin": {
    "grunt-ghost": "bin/grunt-ghost"
  },
  "engines": {
    "node": "~0.8.0"
  },
  "peerDependencies": {
    "grunt": "~0.4.0"
  },
  "keywords": [
    "gruntplugin",
    "casperjs",
    "casper"
  ],
  "devDependencies": {
    "grunt-contrib-jshint": "~0.2.0",
    "grunt": "~0.4.0"
  },
  "readme": "# grunt-ghost \n# I no longer use or maintain this plugin. Let me know if you are interested in maintaining this project. \n[![Build Status](https://travis-ci.org/colinwren/grunt-ghost.png?branch=master)](https://travis-ci.org/colinwren/grunt-ghost)\n\n[Grunt](http://gruntjs.com/) task to run [CasperJS](http://casperjs.org/) tests.\n\n## Getting Started\nIf you haven't used grunt before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a gruntfile as well as install and use grunt plugins. Once you're familiar with that process, install this plugin with this command:\n```shell\nnpm install grunt-ghost --save-dev\n```\n\nThen add this line to your project's `Gruntfile.js` gruntfile:\n\n```javascript\ngrunt.loadNpmTasks('grunt-ghost');\n```\n\n## Documentation\n####Basic use without options\nSpecify the files/directories of the tests you want to run in the `filesSrc` array. Files will be run in alphabetic and numerical order.\n```javascript\nghost: {\n  dist: {\n    filesSrc: ['tests/1_userLogin.js','tests/2_userLogout']\n  }\n}\n```\n####Dependencies\n\nThe only dependencies are [CasperJS](http://casperjs.org/) and\n[Grunt](http://gruntjs.com/)\n\n#### Using options\nI have included all the test command options listed in the [CasperJS documentation]( http://casperjs.org/testing.html#casper-test-command) and some options of my own.\n```javascript\nghost: {\n  dist: {\n    filesSrc: ['tests/userSuite/*'],\n\n    // CasperJS test command options\n    options: {\n      // Allows you to pass variables to casper that can be accesed in files,\n      // for example, if you used the following args object then\n      // casper.cli.get('username') would return 'colin'\n      args: {\n        username: 'colin'\n      },\n      // Exports results of test to a xUnit XML file\n      xunit: 'xunit/userSuite.xml',\n      // Outputs additional log messages\n      direct: true,\n      // Sets logging level, check out http://casperjs.org/logging.html\n      logLevel: 'info',\n      // Specifies files to be included for each test file, accepts file paths or globs as input\n      includes: [\n        'tests/config.js',\n        'lib/jquery.min.js'\n      ],\n      // Adds tests from specified files before running the test suite\n      pre: ['tests/pre-test.js'],\n      // Adds tests from specified files after running the test suite\n      post: ['tests/post-test.js'],\n      // Terminates test suite upon failure of first test\n      failFast: true,\n      // Specify a custom test runner\n      runner: 'tests/customRunner.js'\n      // grunt-ghost specific options\n      // Prints the command given to CasperJS\n      printCommand: true,\n      // Prints list of filepaths\n      printFilePaths: true\n    }\n  }\n}\n```\n## Attribution\n\nThanks to the [CasperJS](http://casperjs.org) authors for making a great tool, the descriptions of the test command options are modifications from their [documentation]( http://casperjs.org/testing.html#casper-test-command). I also want to thank the authors of [grunt-casperjs](https://github.com/ronaldlokers/grunt-casperjs) and [grunt-recess](https://github.com/sindresorhus/grunt-recess) because I learned a lot from looking at their source.\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using grunt.\n\n## License\nCopyright (c) 2013 Colin Wren\nLicensed under the MIT license.\n\n## Release History\n\n * v1.0.13   Fixed Fix printCommand infinite loop bug\n * v1.0.12   Fixed glob filematching\n * v1.0.11   Enabled streaming output\n",
  "readmeFilename": "README.md",
  "_id": "grunt-ghost@1.1.0",
  "dist": {
    "shasum": "78a1034193ce555260e849bbfc7c631a82ab0f56",
    "tarball": "http://registry.npmjs.org/grunt-ghost/-/grunt-ghost-1.1.0.tgz"
  },
  "_from": "grunt-ghost@1.1.0",
  "_npmVersion": "1.3.8",
  "_npmUser": {
    "name": "colinwren",
    "email": "colinwrenca@gmail.com"
  },
  "maintainers": [
    {
      "name": "colinwren",
      "email": "colin@cawren.com"
    },
    {
      "name": "seb",
      "email": "seb@ninja.sg"
    }
  ],
  "directories": {},
  "_shasum": "78a1034193ce555260e849bbfc7c631a82ab0f56",
  "_resolved": "https://registry.npmjs.org/grunt-ghost/-/grunt-ghost-1.1.0.tgz"
}
